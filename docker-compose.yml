services:
  django:
    container_name: django
    image: django:ft
    build:
      context: ./srcs/django
      args:
          BUILD_ARCH: ${HOST_ARCH:?HOST_ARCH is required}
          USER_NAME: ${DOCKER_USER:?DOCKER_USER is required}
          USER_ID: ${DOCKER_USER_ID:?DOCKER_USER_ID is required}
          GROUP_NAME: ${DOCKER_GROUP:?DOCKER_GROUP is required}
          GROUP_ID: ${DOCKER_GROUP_ID:?DOCKER_GROUP_ID is required}
          SOLCX_VERSION: ${SOLCX_VERSION:?SOLCX_VERSION is required}
          SOLCX_FILENAME: ${SOLCX_FILENAME:?SOLCX_FILENAME is required}
          SOLCX_BINARY_PATH: ${SOLCX_BINARY_PATH:?SOLCX_BINARY_PATH is required}
    env_file:
      - .env
    networks:
      - intra
    volumes:
      - static_data:/var/www/ft
    depends_on:
      - postgres
    restart: unless-stopped
    # develop:
    #   watch:
    #     - action: sync+restart
    #       path: ./srcs/django
    #       target: /app
    #     - action: sync+restart
    #       path: ./srcs/django/static
    #       target: /app/static
    #     - action: sync+restart
    #       path: ./srcs/django/templates
    #       target: /app/templates
    #     - action: rebuild
    #       path: ./srcs/django/dockerfile
    #     - action: rebuild
    #       path: ./srcs/django/pyproject.toml

  postgres:
    container_name: postgres
    image: postgres:alpine3.19
    shm_size: 256mb
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - intra
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:alpine3.19
    env_file:
      - .env
    volumes:
      - redis_data:/data
    networks:
      - intra
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: nginx:ft
    build:
      context: ./srcs/nginx
      args:
          BUILD_ARCH: ${HOST_ARCH:?HOST_ARCH is required}
          USER_NAME: ${DOCKER_USER:?DOCKER_USER is required}
          USER_ID: ${DOCKER_USER_ID:?DOCKER_USER_ID is required}
          GROUP_NAME: ${DOCKER_GROUP:?DOCKER_GROUP is required}
          GROUP_ID: ${DOCKER_GROUP_ID:?DOCKER_GROUP_ID is required}
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_data:/var/www/ft
    networks:
      - intra
    depends_on:
      - django
    restart: unless-stopped
    # develop:
    #   watch:
    #     - action: sync+restart
    #       path: ./srcs/nginx
    #       target: /app
    #     - action: rebuild
    #       path: ./srcs/nginx/dockerfile

  hardhat:
    container_name: hardhat
    image: hardhat:ft
    build:
      context: ./srcs/hardhat
      args:
          BUILD_ARCH: ${HOST_ARCH:?HOST_ARCH is required}
          USER_NAME: ${DOCKER_USER:?DOCKER_USER is required}
          USER_ID: ${DOCKER_USER_ID:?DOCKER_USER_ID is required}
          GROUP_NAME: ${DOCKER_GROUP:?DOCKER_GROUP is required}
          GROUP_ID: ${DOCKER_GROUP_ID:?DOCKER_GROUP_ID is required}
    networks:
      - intra
    ports:
      - "8545:8545"
    restart: unless-stopped

volumes:
  postgres_data:
  static_data:
  redis_data:

networks:
  intra:
    driver: bridge